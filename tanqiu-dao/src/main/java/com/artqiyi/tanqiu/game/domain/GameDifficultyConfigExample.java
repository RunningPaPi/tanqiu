package com.artqiyi.tanqiu.game.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class GameDifficultyConfigExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    public GameDifficultyConfigExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andGameModelIdIsNull() {
            addCriterion("game_model_id is null");
            return (Criteria) this;
        }

        public Criteria andGameModelIdIsNotNull() {
            addCriterion("game_model_id is not null");
            return (Criteria) this;
        }

        public Criteria andGameModelIdEqualTo(Long value) {
            addCriterion("game_model_id =", value, "gameModelId");
            return (Criteria) this;
        }

        public Criteria andGameModelIdNotEqualTo(Long value) {
            addCriterion("game_model_id <>", value, "gameModelId");
            return (Criteria) this;
        }

        public Criteria andGameModelIdGreaterThan(Long value) {
            addCriterion("game_model_id >", value, "gameModelId");
            return (Criteria) this;
        }

        public Criteria andGameModelIdGreaterThanOrEqualTo(Long value) {
            addCriterion("game_model_id >=", value, "gameModelId");
            return (Criteria) this;
        }

        public Criteria andGameModelIdLessThan(Long value) {
            addCriterion("game_model_id <", value, "gameModelId");
            return (Criteria) this;
        }

        public Criteria andGameModelIdLessThanOrEqualTo(Long value) {
            addCriterion("game_model_id <=", value, "gameModelId");
            return (Criteria) this;
        }

        public Criteria andGameModelIdIn(List<Long> values) {
            addCriterion("game_model_id in", values, "gameModelId");
            return (Criteria) this;
        }

        public Criteria andGameModelIdNotIn(List<Long> values) {
            addCriterion("game_model_id not in", values, "gameModelId");
            return (Criteria) this;
        }

        public Criteria andGameModelIdBetween(Long value1, Long value2) {
            addCriterion("game_model_id between", value1, value2, "gameModelId");
            return (Criteria) this;
        }

        public Criteria andGameModelIdNotBetween(Long value1, Long value2) {
            addCriterion("game_model_id not between", value1, value2, "gameModelId");
            return (Criteria) this;
        }

        public Criteria andGameModelKeyIsNull() {
            addCriterion("game_model_key is null");
            return (Criteria) this;
        }

        public Criteria andGameModelKeyIsNotNull() {
            addCriterion("game_model_key is not null");
            return (Criteria) this;
        }

        public Criteria andGameModelKeyEqualTo(String value) {
            addCriterion("game_model_key =", value, "gameModelKey");
            return (Criteria) this;
        }

        public Criteria andGameModelKeyNotEqualTo(String value) {
            addCriterion("game_model_key <>", value, "gameModelKey");
            return (Criteria) this;
        }

        public Criteria andGameModelKeyGreaterThan(String value) {
            addCriterion("game_model_key >", value, "gameModelKey");
            return (Criteria) this;
        }

        public Criteria andGameModelKeyGreaterThanOrEqualTo(String value) {
            addCriterion("game_model_key >=", value, "gameModelKey");
            return (Criteria) this;
        }

        public Criteria andGameModelKeyLessThan(String value) {
            addCriterion("game_model_key <", value, "gameModelKey");
            return (Criteria) this;
        }

        public Criteria andGameModelKeyLessThanOrEqualTo(String value) {
            addCriterion("game_model_key <=", value, "gameModelKey");
            return (Criteria) this;
        }

        public Criteria andGameModelKeyLike(String value) {
            addCriterion("game_model_key like", value, "gameModelKey");
            return (Criteria) this;
        }

        public Criteria andGameModelKeyNotLike(String value) {
            addCriterion("game_model_key not like", value, "gameModelKey");
            return (Criteria) this;
        }

        public Criteria andGameModelKeyIn(List<String> values) {
            addCriterion("game_model_key in", values, "gameModelKey");
            return (Criteria) this;
        }

        public Criteria andGameModelKeyNotIn(List<String> values) {
            addCriterion("game_model_key not in", values, "gameModelKey");
            return (Criteria) this;
        }

        public Criteria andGameModelKeyBetween(String value1, String value2) {
            addCriterion("game_model_key between", value1, value2, "gameModelKey");
            return (Criteria) this;
        }

        public Criteria andGameModelKeyNotBetween(String value1, String value2) {
            addCriterion("game_model_key not between", value1, value2, "gameModelKey");
            return (Criteria) this;
        }

        public Criteria andGameRoundIsNull() {
            addCriterion("game_round is null");
            return (Criteria) this;
        }

        public Criteria andGameRoundIsNotNull() {
            addCriterion("game_round is not null");
            return (Criteria) this;
        }

        public Criteria andGameRoundEqualTo(Integer value) {
            addCriterion("game_round =", value, "gameRound");
            return (Criteria) this;
        }

        public Criteria andGameRoundNotEqualTo(Integer value) {
            addCriterion("game_round <>", value, "gameRound");
            return (Criteria) this;
        }

        public Criteria andGameRoundGreaterThan(Integer value) {
            addCriterion("game_round >", value, "gameRound");
            return (Criteria) this;
        }

        public Criteria andGameRoundGreaterThanOrEqualTo(Integer value) {
            addCriterion("game_round >=", value, "gameRound");
            return (Criteria) this;
        }

        public Criteria andGameRoundLessThan(Integer value) {
            addCriterion("game_round <", value, "gameRound");
            return (Criteria) this;
        }

        public Criteria andGameRoundLessThanOrEqualTo(Integer value) {
            addCriterion("game_round <=", value, "gameRound");
            return (Criteria) this;
        }

        public Criteria andGameRoundIn(List<Integer> values) {
            addCriterion("game_round in", values, "gameRound");
            return (Criteria) this;
        }

        public Criteria andGameRoundNotIn(List<Integer> values) {
            addCriterion("game_round not in", values, "gameRound");
            return (Criteria) this;
        }

        public Criteria andGameRoundBetween(Integer value1, Integer value2) {
            addCriterion("game_round between", value1, value2, "gameRound");
            return (Criteria) this;
        }

        public Criteria andGameRoundNotBetween(Integer value1, Integer value2) {
            addCriterion("game_round not between", value1, value2, "gameRound");
            return (Criteria) this;
        }

        public Criteria andMinRowIsNull() {
            addCriterion("min_row is null");
            return (Criteria) this;
        }

        public Criteria andMinRowIsNotNull() {
            addCriterion("min_row is not null");
            return (Criteria) this;
        }

        public Criteria andMinRowEqualTo(Integer value) {
            addCriterion("min_row =", value, "minRow");
            return (Criteria) this;
        }

        public Criteria andMinRowNotEqualTo(Integer value) {
            addCriterion("min_row <>", value, "minRow");
            return (Criteria) this;
        }

        public Criteria andMinRowGreaterThan(Integer value) {
            addCriterion("min_row >", value, "minRow");
            return (Criteria) this;
        }

        public Criteria andMinRowGreaterThanOrEqualTo(Integer value) {
            addCriterion("min_row >=", value, "minRow");
            return (Criteria) this;
        }

        public Criteria andMinRowLessThan(Integer value) {
            addCriterion("min_row <", value, "minRow");
            return (Criteria) this;
        }

        public Criteria andMinRowLessThanOrEqualTo(Integer value) {
            addCriterion("min_row <=", value, "minRow");
            return (Criteria) this;
        }

        public Criteria andMinRowIn(List<Integer> values) {
            addCriterion("min_row in", values, "minRow");
            return (Criteria) this;
        }

        public Criteria andMinRowNotIn(List<Integer> values) {
            addCriterion("min_row not in", values, "minRow");
            return (Criteria) this;
        }

        public Criteria andMinRowBetween(Integer value1, Integer value2) {
            addCriterion("min_row between", value1, value2, "minRow");
            return (Criteria) this;
        }

        public Criteria andMinRowNotBetween(Integer value1, Integer value2) {
            addCriterion("min_row not between", value1, value2, "minRow");
            return (Criteria) this;
        }

        public Criteria andMaxRowIsNull() {
            addCriterion("max_row is null");
            return (Criteria) this;
        }

        public Criteria andMaxRowIsNotNull() {
            addCriterion("max_row is not null");
            return (Criteria) this;
        }

        public Criteria andMaxRowEqualTo(Integer value) {
            addCriterion("max_row =", value, "maxRow");
            return (Criteria) this;
        }

        public Criteria andMaxRowNotEqualTo(Integer value) {
            addCriterion("max_row <>", value, "maxRow");
            return (Criteria) this;
        }

        public Criteria andMaxRowGreaterThan(Integer value) {
            addCriterion("max_row >", value, "maxRow");
            return (Criteria) this;
        }

        public Criteria andMaxRowGreaterThanOrEqualTo(Integer value) {
            addCriterion("max_row >=", value, "maxRow");
            return (Criteria) this;
        }

        public Criteria andMaxRowLessThan(Integer value) {
            addCriterion("max_row <", value, "maxRow");
            return (Criteria) this;
        }

        public Criteria andMaxRowLessThanOrEqualTo(Integer value) {
            addCriterion("max_row <=", value, "maxRow");
            return (Criteria) this;
        }

        public Criteria andMaxRowIn(List<Integer> values) {
            addCriterion("max_row in", values, "maxRow");
            return (Criteria) this;
        }

        public Criteria andMaxRowNotIn(List<Integer> values) {
            addCriterion("max_row not in", values, "maxRow");
            return (Criteria) this;
        }

        public Criteria andMaxRowBetween(Integer value1, Integer value2) {
            addCriterion("max_row between", value1, value2, "maxRow");
            return (Criteria) this;
        }

        public Criteria andMaxRowNotBetween(Integer value1, Integer value2) {
            addCriterion("max_row not between", value1, value2, "maxRow");
            return (Criteria) this;
        }

        public Criteria andMinScoreIsNull() {
            addCriterion("min_score is null");
            return (Criteria) this;
        }

        public Criteria andMinScoreIsNotNull() {
            addCriterion("min_score is not null");
            return (Criteria) this;
        }

        public Criteria andMinScoreEqualTo(Integer value) {
            addCriterion("min_score =", value, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreNotEqualTo(Integer value) {
            addCriterion("min_score <>", value, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreGreaterThan(Integer value) {
            addCriterion("min_score >", value, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("min_score >=", value, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreLessThan(Integer value) {
            addCriterion("min_score <", value, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreLessThanOrEqualTo(Integer value) {
            addCriterion("min_score <=", value, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreIn(List<Integer> values) {
            addCriterion("min_score in", values, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreNotIn(List<Integer> values) {
            addCriterion("min_score not in", values, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreBetween(Integer value1, Integer value2) {
            addCriterion("min_score between", value1, value2, "minScore");
            return (Criteria) this;
        }

        public Criteria andMinScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("min_score not between", value1, value2, "minScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreIsNull() {
            addCriterion("max_score is null");
            return (Criteria) this;
        }

        public Criteria andMaxScoreIsNotNull() {
            addCriterion("max_score is not null");
            return (Criteria) this;
        }

        public Criteria andMaxScoreEqualTo(Integer value) {
            addCriterion("max_score =", value, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreNotEqualTo(Integer value) {
            addCriterion("max_score <>", value, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreGreaterThan(Integer value) {
            addCriterion("max_score >", value, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreGreaterThanOrEqualTo(Integer value) {
            addCriterion("max_score >=", value, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreLessThan(Integer value) {
            addCriterion("max_score <", value, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreLessThanOrEqualTo(Integer value) {
            addCriterion("max_score <=", value, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreIn(List<Integer> values) {
            addCriterion("max_score in", values, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreNotIn(List<Integer> values) {
            addCriterion("max_score not in", values, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreBetween(Integer value1, Integer value2) {
            addCriterion("max_score between", value1, value2, "maxScore");
            return (Criteria) this;
        }

        public Criteria andMaxScoreNotBetween(Integer value1, Integer value2) {
            addCriterion("max_score not between", value1, value2, "maxScore");
            return (Criteria) this;
        }

        public Criteria andTotalNumIsNull() {
            addCriterion("total_num is null");
            return (Criteria) this;
        }

        public Criteria andTotalNumIsNotNull() {
            addCriterion("total_num is not null");
            return (Criteria) this;
        }

        public Criteria andTotalNumEqualTo(Integer value) {
            addCriterion("total_num =", value, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumNotEqualTo(Integer value) {
            addCriterion("total_num <>", value, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumGreaterThan(Integer value) {
            addCriterion("total_num >", value, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumGreaterThanOrEqualTo(Integer value) {
            addCriterion("total_num >=", value, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumLessThan(Integer value) {
            addCriterion("total_num <", value, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumLessThanOrEqualTo(Integer value) {
            addCriterion("total_num <=", value, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumIn(List<Integer> values) {
            addCriterion("total_num in", values, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumNotIn(List<Integer> values) {
            addCriterion("total_num not in", values, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumBetween(Integer value1, Integer value2) {
            addCriterion("total_num between", value1, value2, "totalNum");
            return (Criteria) this;
        }

        public Criteria andTotalNumNotBetween(Integer value1, Integer value2) {
            addCriterion("total_num not between", value1, value2, "totalNum");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("status is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("status is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Short value) {
            addCriterion("status =", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Short value) {
            addCriterion("status <>", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Short value) {
            addCriterion("status >", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("status >=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Short value) {
            addCriterion("status <", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Short value) {
            addCriterion("status <=", value, "status");
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Short> values) {
            addCriterion("status in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Short> values) {
            addCriterion("status not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Short value1, Short value2) {
            addCriterion("status between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Short value1, Short value2) {
            addCriterion("status not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andCreateIdIsNull() {
            addCriterion("create_id is null");
            return (Criteria) this;
        }

        public Criteria andCreateIdIsNotNull() {
            addCriterion("create_id is not null");
            return (Criteria) this;
        }

        public Criteria andCreateIdEqualTo(Long value) {
            addCriterion("create_id =", value, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateIdNotEqualTo(Long value) {
            addCriterion("create_id <>", value, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateIdGreaterThan(Long value) {
            addCriterion("create_id >", value, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateIdGreaterThanOrEqualTo(Long value) {
            addCriterion("create_id >=", value, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateIdLessThan(Long value) {
            addCriterion("create_id <", value, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateIdLessThanOrEqualTo(Long value) {
            addCriterion("create_id <=", value, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateIdIn(List<Long> values) {
            addCriterion("create_id in", values, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateIdNotIn(List<Long> values) {
            addCriterion("create_id not in", values, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateIdBetween(Long value1, Long value2) {
            addCriterion("create_id between", value1, value2, "createId");
            return (Criteria) this;
        }

        public Criteria andCreateIdNotBetween(Long value1, Long value2) {
            addCriterion("create_id not between", value1, value2, "createId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdIsNull() {
            addCriterion("update_id is null");
            return (Criteria) this;
        }

        public Criteria andUpdateIdIsNotNull() {
            addCriterion("update_id is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateIdEqualTo(Long value) {
            addCriterion("update_id =", value, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdNotEqualTo(Long value) {
            addCriterion("update_id <>", value, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdGreaterThan(Long value) {
            addCriterion("update_id >", value, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdGreaterThanOrEqualTo(Long value) {
            addCriterion("update_id >=", value, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdLessThan(Long value) {
            addCriterion("update_id <", value, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdLessThanOrEqualTo(Long value) {
            addCriterion("update_id <=", value, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdIn(List<Long> values) {
            addCriterion("update_id in", values, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdNotIn(List<Long> values) {
            addCriterion("update_id not in", values, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdBetween(Long value1, Long value2) {
            addCriterion("update_id between", value1, value2, "updateId");
            return (Criteria) this;
        }

        public Criteria andUpdateIdNotBetween(Long value1, Long value2) {
            addCriterion("update_id not between", value1, value2, "updateId");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return (Criteria) this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return (Criteria) this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table game_difficulty_config
     *
     * @mbg.generated do_not_delete_during_merge Mon Jul 23 18:10:11 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table game_difficulty_config
     *
     * @mbg.generated Mon Jul 23 18:10:11 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}